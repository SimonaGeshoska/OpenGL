#define PI 3.14159265358979323846

vec2 rotate2D (vec2 _st, float _angle) {
    _st -= 0.5;
    _st =  mat2(cos(_angle),-sin(_angle), sin(_angle),cos(_angle)) * _st;
    _st += 0.5;
    return _st;
}

vec2 tile (vec2 _st, float _zoom) {
    _st *= _zoom;
    return fract(_st);
}

vec2 rotateTilePattern(vec2 _st){

    _st *= 2.0;

    float index = 0.0;    
    index += step(1., mod(_st.x,2.0));
    index += step(1., mod(_st.y,2.0))*2.0;

    _st = fract(_st);

    /*if(index == 1.0){
        _st = rotate2D(_st,PI*0.5);
    } else if(index == 2.0){
        _st = rotate2D(_st,PI*-0.5);
    } else if(index == 3.0){
        _st = rotate2D(_st,PI);
    }*/
    
    if (index>0.) _st = rotate2D(_st, PI* ( index==1. ? .5 : index==2. ? -.5 : 1. ));

    return _st;
}

void mainImage( out vec4 fragColor, in vec2 fragCoord ){
    vec2 st = fragCoord.xy/iResolution.y;

    st = tile(st,2.);
    st = rotateTilePattern(st);

     st = tile(st,2.0);
     st = rotate2D(st,-PI*iTime*0.25 * step(.5, (st.y)));

    fragColor = vec4(vec3(step(st.x,sin(st.y + iTime)/2. + .5)), 1.0);
                        //vec3(sin(iTime)+1., cos(iTime)+1., cos(iTime)+1.),1.0);
}
